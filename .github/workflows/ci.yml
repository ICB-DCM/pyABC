name: CI

# trigger
on: [pull_request]

jobs:

  base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.7]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-base
        restore-keys: ${{ runner.os }}-

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh base R
        pip install -e .[R,test]

    - name: Run tests
      timeout-minutes: 7
      run: |
        python -m pytest --cov=pyabc --cov-report=xml \
          test/base test/visualization test_performance -s

    - name: Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  external:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.7]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-external
        restore-keys: ${{ runner.os }}-

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh base R
        pip install -e .[R,test]

    - name: Run tests
      timeout-minutes: 10
      run: |
        python -m pytest --cov=pyabc --cov-report=xml test/external -s

    - name: Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  petab:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-petab
        restore-keys: ${{ runner.os }}-

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh petab
        pip install -e .[petab,test]

    - name: Run tests
      timeout-minutes: 10
      run: |
        python -m pytest --cov=pyabc --cov-report=xml test/petab -s

    - name: Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8, 3.7]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Prepare python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-ci-base
          restore-keys: ${{ runner.os }}-

      - name: Install dependencies
        run: |
          .github/workflows/ci_dependencies.sh
          pip install -e .[test]

      - name: Run tests
        timeout-minutes: 4
        run: |
          python -m pytest --cov=pyabc --cov-report=xml \
            test/base/test_macos.py -s

      - name: Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  notebooks1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-notebooks1

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh
        pip install jupyter
        pip install -e .[examples]

    - name: Run notebooks
      timeout-minutes: 10
      run: |
        test/run_notebooks.sh 1

  notebooks2:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-notebooks2

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh R
        pip install jupyter
        pip install -e .[examples,R]

    - name: Run notebooks
      timeout-minutes: 10
      run: |
        test/run_notebooks.sh 2

  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-docs

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh doc
        pip install tox

    - name: Run tox
      timeout-minutes: 10
      run: tox
