name: CI

# trigger
on: [push]

jobs:
  base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-base
        restore-keys: ${{ runner.os }}-

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh base R
        pip install -e .[R,test]

    - name: Run tests
      timeout-minutes: 10
      run: |
        python -m pytest --cov=pyabc --cov-report=xml \
          test/base test/visualization

    - name: Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  external:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-external
        restore-keys: ${{ runner.os }}-

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh base R
        pip install -e .[R,test]

    - name: Run tests
      timeout-minutes: 10
      run: |
        python -m pytest --cov=pyabc --cov-report=xml test/external

    - name: Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  petab:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-petab
        restore-keys: ${{ runner.os }}-

    - name: Install dependencies
      run: |
        .github/workflows/ci_dependencies.sh petab
        pip install -e .[petab,test]

    - name: Run tests
      timeout-minutes: 10
      run: |
        python -m pytest --cov=pyabc --cov-report=xml test/petab

    - name: Coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  mac:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Prepare python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-ci-base
          restore-keys: ${{ runner.os }}-

      - name: Install dependencies
        run: |
          .github/workflows/ci_dependencies.sh
          pip install -e .[test]

      - name: Run tests
        timeout-minutes: 3
        run: |
          python -m pytest --cov=pyabc --cov-report=xml test/base/test_macos.py

      - name: Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml

  quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Prepare python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-ci-quality
        restore-keys: ${{ runner.os }}-

    - name: Install dependencies
      run: |
        pip install -e .[quality]

    - name: Run flake8
      timeout-minutes: 1
      run: ./run_flake8.sh

    - name: Run pyroma
      run: pyroma --min=10 .

    - name: Run rst-lint
      run: rst-lint README.rst

